{"version":3,"sources":["config.js","components/Main/Lal_1.js","components/Main/Lal_2.js","components/Main/Navbar.js","components/Main/footer.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","REACT_APP_API_URL","PUBLIC_URL","REACT_APP_PUBLIC_URL","Lal_1","props","LALData","LAL1Data","LALData_RT","length","console","log","style","margin","width","textAlign","display","alignItems","src","height","alt","border","padding","alignSelf","marginTop","productivity","program","speed","temperature","LAL2Data","NavbarComp","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","eventKey","footer","fixed","Container","Main","useState","setIronsData","setLAL1Data","setLAL2Data","useEffect","axios","get","then","res","data","lal1Data","filter","iron","lal2Data","setInterval","loadData","App","state","IronsData","exact","path","render","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"uUAAaA,EAAWC,mHAAYC,mBAAyD,uCAChFC,EAAaF,mHAAYG,sBAAwD,oC,QCG/E,SAASC,EAAMC,GAC1B,IAAMC,EAAUD,EAAME,SAChBC,EAAaF,EAAQA,EAAQG,OAAO,GAE1C,OADAC,QAAQC,IAAIH,GACRF,EAEA,yBAAKM,MAAO,CAACC,OAAQ,OAAQC,MAAO,QAASC,UAAW,WACpD,4DACA,yBAAKH,MAAO,CAACI,QAAS,OAAQC,WAAW,WACrC,yBAAKC,IAAG,UAAKhB,EAAL,uBAAsCiB,OAAO,MAAMC,IAAI,SAC/D,yBAAKR,MAAO,CAACS,OAAQ,iBAAkBC,QAAS,OAAQC,UAAW,aAAcC,UAAW,OAAQT,UAAW,SAC3G,wCAAa,2BAAIP,EAAWiB,aAAaC,UACzC,yCAAc,2BAAIlB,EAAWiB,aAAaE,MAA5B,MACd,2CAAgB,2BAAInB,EAAWiB,aAAaG,YAA5B,aATZ,yCCJT,SAASxB,EAAMC,GAC1B,IAAMC,EAAUD,EAAMwB,SAChBrB,EAAaF,EAAQA,EAAQG,OAAO,GAE1C,OADAC,QAAQC,IAAIH,GACRF,EAEA,yBAAKM,MAAO,CAACC,OAAQ,OAAQC,MAAO,QAASC,UAAW,WACpD,4DACA,yBAAKH,MAAO,CAACI,QAAS,OAAQC,WAAW,WACrC,yBAAKC,IAAG,UAAKhB,EAAL,uBAAsCiB,OAAO,MAAMC,IAAI,SAC/D,yBAAKR,MAAO,CAACS,OAAQ,iBAAkBC,QAAS,OAAQC,UAAW,aAAcC,UAAW,OAAQT,UAAW,SAC3G,wCAAa,2BAAIP,EAAWiB,aAAaC,UACzC,yCAAc,2BAAIlB,EAAWiB,aAAaE,MAA5B,MACd,2CAAgB,2BAAInB,EAAWiB,aAAaG,YAA5B,aATZ,yC,+BCJT,SAASE,IACpB,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACnD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAQ,yBAAKnB,IAAG,UAAKhB,EAAL,gDAA4DkB,IAAI,OAAOD,OAAO,QACjH,kBAACY,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACf,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,aAAf,iBACA,kBAACQ,EAAA,EAAD,CAAaC,MAAM,WAAWL,GAAG,2BAC7B,kBAACI,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,UACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,kBACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,aACA,kBAACQ,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,oBAGJ,kBAACK,EAAA,EAAD,KACA,kBAACA,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,cACA,kBAACK,EAAA,EAAIE,KAAL,CAAUK,SAAU,EAAGZ,KAAK,UAA5B,kB,aCpBL,SAASa,IACpB,OACI,kBAACnB,EAAA,EAAD,CAAQoB,MAAM,SAASlB,OAAO,KAAKE,QAAQ,OAAOD,GAAG,QACrD,kBAACkB,EAAA,EAAD,KACI,kBAACrB,EAAA,EAAOK,MAAR,CAAcC,KAAK,KAAnB,YCCG,SAASgB,IAAQ,IAAD,EACOC,mBAAS,MADhB,mBACTC,GADS,aAEKD,mBAAS,MAFd,mBAEpB/C,EAFoB,KAEViD,EAFU,OAGKF,mBAAS,MAHd,mBAGpBzB,EAHoB,KAGV4B,EAHU,KAI3BC,qBAAU,WACNC,IAAMC,IAAN,UAAa7D,EAAb,eACK8D,MAAK,SAACC,GACHP,EAAaO,EAAIC,MACjB,IAAMC,EAAWF,EAAIC,KAAKE,QAAO,SAACF,GAClC,OAAqB,IAAdA,EAAKG,QAENC,EAAWL,EAAIC,KAAKE,QAAO,SAACF,GAC9B,OAAqB,IAAdA,EAAKG,QAEhBV,EAAYQ,GACZP,EAAYU,GACZC,YAAYC,EAAS,UAE/B,IACF,IAAMA,EAAW,WACbV,IAAMC,IAAN,UAAa7D,EAAb,eACK8D,MAAK,SAACC,GACHP,EAAaO,EAAIC,MACjB,IAAMC,EAAWF,EAAIC,KAAKE,QAAO,SAACF,GAClC,OAAqB,IAAdA,EAAKG,QAENC,EAAWL,EAAIC,KAAKE,QAAO,SAACF,GAC9B,OAAqB,IAAdA,EAAKG,QAEhBV,EAAYQ,GACZP,EAAYU,OAGxB,OAAI5D,GAAasB,EAEb,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMtB,SAAYA,IAClB,kBAAC,EAAD,CAAMsB,SAAYA,IAClB,kBAAC,EAAD,OAN8B,yC,IC9BjByC,E,4MAEnBC,MAAQ,CACNC,UAAW,I,oGAOX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAC5B,OAAO,kBAACtB,EAAD,c,GAbgBuB,aCCbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCNNC,IAASP,OACP,kBAAC,IAAD,KACA,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlF,QAAQkF,MAAMA,EAAMC,c","file":"static/js/main.4f91a0f7.chunk.js","sourcesContent":["export const API_URL =  process.env.REACT_APP_API_URL  /*|| 'http://localhost:5000/api'*/ || 'https://laundryeye.herokuapp.com/api'\nexport const PUBLIC_URL = process.env.REACT_APP_PUBLIC_URL /*|| 'http://localhost:3000/'*/ || 'https://laundryeye.herokuapp.com/'","import React from 'react'\nimport {PUBLIC_URL} from '../../config';\n\n\nexport default function Lal_1(props) {\n    const LALData = props.LAL1Data;\n    const LALData_RT = LALData[LALData.length-1]\n    console.log(LALData_RT )\n    if(!LALData) return <p>Loading...</p>\n    return (\n        <div style={{margin: '40px', width: '500px', textAlign: 'center'}}>\n            <h4>Linea de acabado liso Nº1</h4>\n            <div style={{display: 'flex', alignItems:'center'}}>\n                <img src={`${PUBLIC_URL}/PlanoPlantaLAL.jpg`} height='400' alt='LAL1'/>\n                <div style={{border: '1px solid gray', padding: '10px', alignSelf: 'flex-start', marginTop: '10px', textAlign: 'left'}}>\n                    <p>Programa: <b>{LALData_RT.productivity.program}</b></p>\n                    <p>Velocidad: <b>{LALData_RT.productivity.speed}%</b></p>\n                    <p>Temperatura: <b>{LALData_RT.productivity.temperature}ºC</b></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {PUBLIC_URL} from '../../config';\n\n\nexport default function Lal_1(props) {\n    const LALData = props.LAL2Data;\n    const LALData_RT = LALData[LALData.length-1]\n    console.log(LALData_RT )\n    if(!LALData) return <p>Loading...</p>\n    return (\n        <div style={{margin: '40px', width: '500px', textAlign: 'center'}}>\n            <h4>Linea de acabado liso Nº2</h4>\n            <div style={{display: 'flex', alignItems:'center'}}>\n                <img src={`${PUBLIC_URL}/PlanoPlantaLAL.jpg`} height='400' alt='LAL1'/>\n                <div style={{border: '1px solid gray', padding: '10px', alignSelf: 'flex-start', marginTop: '10px', textAlign: 'left'}}>\n                    <p>Programa: <b>{LALData_RT.productivity.program}</b></p>\n                    <p>Velocidad: <b>{LALData_RT.productivity.speed}%</b></p>\n                    <p>Temperatura: <b>{LALData_RT.productivity.temperature}ºC</b></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport {PUBLIC_URL} from '../../config';\n\nexport default function NavbarComp() {\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\"><img src={`${PUBLIC_URL}/mogan-horizontal_blanco_MODIFICACIÓN.png`} alt='logo' height='50'/></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#features\">Vista General</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                    <Nav>\n                    <Nav.Link href=\"#deets\">More deets</Nav.Link>\n                    <Nav.Link eventKey={2} href=\"#memes\">\n                        Dank memes\n                    </Nav.Link>\n                    </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Navbar, Container} from 'react-bootstrap'\n\nexport default function footer() {\n    return (\n        <Navbar fixed=\"bottom\" expand=\"lg\" variant=\"dark\" bg=\"dark\" >\n        <Container>\n            <Navbar.Brand href=\"#\">Navbar</Navbar.Brand>\n        </Container>\n        </Navbar>\n    )\n}\n","import React,{useState, useEffect} from 'react'\nimport LAL1 from './Lal_1';\nimport LAL2 from './Lal_2';\nimport Navbar from './Navbar';\nimport Footer from './footer';\nimport axios from 'axios';\nimport {API_URL} from '../../config';\n\nexport default function Main() {\n    const [IronsData, setIronsData] = useState(null)\n    const [LAL1Data, setLAL1Data] = useState(null)\n    const [LAL2Data, setLAL2Data] = useState(null)\n    useEffect(()=>{\n        axios.get(`${API_URL}/ironsdata`)\n            .then((res)=>{\n                setIronsData(res.data)\n                const lal1Data = res.data.filter((data)=>{\n                return data.iron === 1\n                })\n                const lal2Data = res.data.filter((data)=>{\n                    return data.iron === 2\n                })\n                setLAL1Data(lal1Data)\n                setLAL2Data(lal2Data)\n                setInterval(loadData,2000)\n            })\n    },[])\n    const loadData = () =>{\n        axios.get(`${API_URL}/ironsdata`)\n            .then((res)=>{\n                setIronsData(res.data)\n                const lal1Data = res.data.filter((data)=>{\n                return data.iron === 1\n                })\n                const lal2Data = res.data.filter((data)=>{\n                    return data.iron === 2\n                })\n                setLAL1Data(lal1Data)\n                setLAL2Data(lal2Data)\n            })\n    }\n    if(!LAL1Data || !LAL2Data) return <p>Loading...</p>\n    return (\n        <div>\n        <Navbar/>\n        <LAL1 LAL1Data = {LAL1Data}/>\n        <LAL2 LAL2Data = {LAL2Data}/>\n        <Footer/>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport {API_URL} from './config';\n\n//#region Components\nimport Main from './components/Main/Main';\n//#endregion Components\n\n\nexport default class App extends Component {\n\n  state = {\n    IronsData: []\n  }\n  componentDidMount(){\n\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" render={()=>{\n          return <Main/>\n        }}/>\n      </Switch>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n//#region Styles\nimport 'bootstrap/dist/css/bootstrap.css'\n//#endregion Styles\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}